import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, classification_report

# Load the dataset
data = pd.read_csv("/content/sample_data/iris.csv")

# Preprocessing: Encoding categorical variables
label_encoder = LabelEncoder()
data['variety'] = label_encoder.fit_transform(data['variety'])

# Splitting the data into features (X) and target variable (y)
X = data[['sepal.length', 'sepal.width', 'petal.length','petal.width']]
y = data['variety']

# Splitting the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the Decision Tree Classifier
clf = DecisionTreeClassifier(random_state=42)

# Train the classifier
clf.fit(X_train, y_train)

# Make predictions on the test set
y_pred = clf.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
print("Classification Report:")
print(classification_report(y_test, y_pred))


---------------------------------------

import matplotlib.pyplot as plt
from sklearn.tree import plot_tree

# Visualize the decision tree
plt.figure(figsize=(20, 30))
plot_tree(clf, filled=True, feature_names=X.columns, class_names=['Virginica', 'Setosa','Versicolor'])
plt.show()
